name: CI/CD for NestJS API

on:
  push:
    branches:
      - develop

env:
  PROJECT_NAME: nestjs-api
  GITHUB_SHA: ${{ github.sha }}

jobs:
  test:
    name: Test Coverage
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - run: npm install
      - name: Test Coverage
        run: npm run test:cov
      - name: Upload Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ./coverage
  # sonarqube:
  #   runs-on: ubuntu-22.04
  #   needs: [test]
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/download-artifact@v4
  #       name: Download coverage file
  #       with:
  #         name: coverage
  #         path: ./
  # - name: SonarQube Scan
  #   uses: sonarsource/sonarqube-scan-action@master
  #   env:
  #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  #   with:
  #     args: >
  #       -Dsonar.sources=src
  #       -Dsonar.tests=src
  #       -Dsonar.inclusions=**/*.spec.ts
  #       -Dsonar.test.inclusions=**/*.spec.ts
  #       -Dsonar.coverageReportPaths=coverage/coverage-final.json
  #       -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
  #       -Dsonar.language=ts
  # - name: SonarQube Quality Gate
  #   uses: sonarsource/sonarqube-quality-gate-action@master
  #   timeout-minutes: 5
  #   env:
  #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  build-and-push-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-22.04
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - name: Setup SHA
        run: echo "GITHUB_SHA=${{ github.sha }}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.ref == 'refs/heads/develop' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.PROJECT_NAME }}:${{ env.GITHUB_SHA }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  gitops-versioning:
    runs-on: ubuntu-22.04
    needs: [build-and-push-docker-image]
    name: GitOps Versioning
    steps:
      - name: Install yq
        run: |
          sudo add-apt-repository ppa:rmescandon/yq
          sudo apt-get update
          sudo apt-get install -y yq
      - name: change image tag to deploy dev
        if: ${{ github.ref == 'refs/heads/develop' }}
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git clone https://x-access-token:${GH_PAT}@github.com/ZFlucKZ/nonprod-k8s-manifest-2.git

          cd nonprod-k8s-manifest-2/dev/nestjs-api

          git config user.name "robot"
          git config user.email "robot@pajj.com"

          yq --version
          yq e '.spec.template.spec.containers[0].image = "${{ secrets.DOCKER_USERNAME }}/${{ env.PROJECT_NAME }}:${{ env.GITHUB_SHA }}"' -i deployment.yaml

          git add deployment.yaml
          git commit -m "[skip actions] ðŸ¤– change develop docker image version ${GITHUB_SHA}"
          git push origin main
